{"version":3,"sources":["routes/Home/components/Select/Select.module.css","routes/Home/components/CountriesList/CountriesList.module.css","routes/Details/Details.module.css","shared/components/Header/Header.module.css","shared/components/InfoList/InfoList.module.css","routes/Home/components/SearchInput/SearchInput.module.css","routes/Home/Home.module.css","shared/components/Header/index.jsx","shared/components/Header/Header.jsx","contexts/CountriesContext.jsx","hooks/useCountries.jsx","shared/components/InfoList/InfoList.jsx","routes/Home/components/CountriesList/CountriesList.jsx","routes/Home/components/SearchInput/SearchInput.jsx","routes/Home/components/Select/Select.jsx","routes/Home/Home.jsx","routes/Home/index.jsx","routes/Details/Details.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","styles","headerWrapper","onClick","body","document","querySelector","theme","getAttribute","setAttribute","icon","faMoon","CountriesContext","React","createContext","countries","setCountries","searchQuery","setSearchQuery","region","setRegion","CountriesContextProvider","children","useState","Provider","value","transformData","data","map","name","capital","flags","population","subregion","tld","currencies","languages","borders","cca3","path","flag","svg","ListItem","infoTitle","InfoList","info","infoList","title","CountriesList","navigate","useNavigate","loadedCountries","setLoadedCountries","useContext","isLoading","setLoading","error","setError","useEffect","ac","AbortController","fetchData","a","fetch","signal","response","ok","json","transformedData","console","abort","filter","country","common","toLowerCase","includes","useCountries","style","margin","width","container","card","src","alt","SearchInput","selectClassName","isFocused","setIsFocused","type","onFocus","onBlur","onChange","e","target","faSearch","REGIONS_ARRAY","Select","isOpen","setIsOpen","options","trigger","faChevronDown","faChevronUp","classNames","optionsMenu","visible","length","regionOption","SubHeader","subHeader","Home","CODE_URL","Details","params","useParams","setCountry","setBorders","fetchBordersCountries","bordersCountries","join","fetchCountryData","countryName","nativeName","topLevelDomain","firstList","secondList","backButton","faArrowLeft","statsContainer","bordersList","cioc","replace","window","location","reload","App","element","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b669d56b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Select_container__2xUKC\",\"trigger\":\"Select_trigger__3k9pc\",\"optionsMenu\":\"Select_optionsMenu__1aueW\",\"visible\":\"Select_visible__1wLSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountriesList_container__kONnu\",\"card\":\"CountriesList_card__ehuhj\",\"info\":\"CountriesList_info__doB5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backButton\":\"Details_backButton__3ZTD9\",\"bordersList\":\"Details_bordersList__2QUmh\",\"statsContainer\":\"Details_statsContainer__2xSai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__2Pnyf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-list\":\"InfoList_info-list__NsN6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchInput_container__Fp3RL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"subHeader\":\"Home_subHeader__2TVSZ\"};","import { Header } from \"./Header\";\n\nexport default Header;\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\nimport styles from \"./Header.module.css\";\n\nexport function Header() {\n  const toggleTheme = () => {\n    const body = document.querySelector(\"html\");\n    const theme = body.getAttribute(\"data-theme\");\n    body.setAttribute(\"data-theme\", theme === \"dark\" ? \"light\" : \"dark\");\n  };\n\n  return (\n    <div className={styles.headerWrapper}>\n      <header>\n        <h1>Where is the world?</h1>\n        <button onClick={toggleTheme}>\n          <FontAwesomeIcon icon={faMoon} />\n          &nbsp; Dark Mode\n        </button>\n      </header>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport const CountriesContext = React.createContext({\n  countries: [],\n  setCountries: () => {},\n  searchQuery: \"\",\n  setSearchQuery: () => {},\n  region: null,\n  setRegion: () => {},\n});\n\nexport const CountriesContextProvider = ({ children }) => {\n  const [countries, setCountries] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [region, setRegion] = useState(null);\n  return (\n    <CountriesContext.Provider\n      value={{\n        countries,\n        setCountries,\n        searchQuery,\n        setSearchQuery,\n        region,\n        setRegion,\n      }}\n    >\n      {children}\n    </CountriesContext.Provider>\n  );\n};\n","import { useState, useEffect, useContext } from \"react\";\nimport { CountriesContext } from \"../contexts/CountriesContext\";\n\nconst BASE_URL =\n  \"https://restcountries.com/v3.1/all?fields=cca3,name,flags,capital,population,region,tld,currencies,languages,subregion,borders\";\nexport const transformData = (data) =>\n  data.map(\n    ({\n      name,\n      capital,\n      flags,\n      population,\n      region,\n      subregion,\n      tld,\n      currencies,\n      languages,\n      borders,\n      cca3,\n    }) => {\n      return {\n        name: name,\n        path: cca3,\n        flag: flags.svg,\n        population,\n        region,\n        subregion,\n        capital: capital[0],\n        tld,\n        currencies,\n        languages,\n        borders,\n        cca3,\n      };\n    }\n  );\nexport const useCountries = () => {\n  const [loadedCountries, setLoadedCountries] = useState();\n  const { countries, setCountries, region, searchQuery } =\n    useContext(CountriesContext);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // AbortController read\n    const ac = new AbortController();\n    // workaround to use async functionality to fetch data.\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(BASE_URL, { signal: ac.signal });\n        if (response.ok) {\n          const data = await response.json();\n          const transformedData = transformData(data);\n          setLoadedCountries(transformedData);\n          setCountries(transformedData);\n        }\n      } catch (e) {\n        setError(e);\n        console.error(e);\n      }\n      setLoading(false);\n    };\n\n    fetchData();\n    return () => ac.abort();\n  }, []);\n\n  useEffect(() => {\n    if (region) {\n      setCountries(\n        loadedCountries.filter((country) => country.region === region)\n      );\n    }\n    if (searchQuery) {\n      setCountries(\n        loadedCountries.filter(({ name }) =>\n          name.common.toLowerCase().includes(searchQuery.toLowerCase())\n        )\n      );\n    }\n  }, [region, searchQuery, setCountries]);\n\n  return {\n    countries,\n    isLoading,\n    error,\n    region,\n    searchQuery,\n  };\n};\n","import React from \"react\";\n\nimport styles from \"./InfoList.module.css\";\n\nconst ListItem = ({ infoTitle, value }) => (\n  <li>\n    <p>\n      <span>{infoTitle}</span>\n      &nbsp;\n      {value}\n    </p>\n  </li>\n);\n\nconst InfoList = ({ info }) => (\n  <ul className={styles.infoList}>\n    {info.map(({ title, value }) => (\n      <ListItem key={title} infoTitle={`${title}:`} value={value} />\n    ))}\n  </ul>\n);\n\nexport default InfoList;\n","import React from \"react\";\n\nimport { useCountries } from \"../../../../hooks/useCountries\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport styles from \"./CountriesList.module.css\";\nimport InfoList from \"../../../../shared/components/InfoList/InfoList\";\n\nconst CountriesList = () => {\n  const navigate = useNavigate();\n  const { countries, isLoading } = useCountries();\n\n  if (isLoading) {\n    return <div style={{ margin: \"30% auto\", width: 100 }}>Loading...</div>;\n  }\n\n  if (!countries) return null;\n  // FIXME:we need to change key value.\n  return (\n    <div className={styles.container}>\n      {countries.map(({ name, flag, population, region, capital, path }) => (\n        <div\n          className={styles.card}\n          key={name.common}\n          onClick={() => navigate(path)}\n        >\n          <img src={flag} alt={`${name.common} flag`} />\n          <div className={styles.info}>\n            <h1>{name.common}</h1>\n            <InfoList\n              info={[\n                { title: \"Population\", value: population },\n                { title: \"Region\", value: region },\n                { title: \"Capital\", value: capital },\n              ]}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CountriesList;\n","import React, { useState, useContext } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { CountriesContext } from \"../../../../contexts/CountriesContext\";\n\nimport styles from \"./SearchInput.module.css\";\n\nexport default function SearchInput({ selectClassName }) {\n  const [isFocused, setIsFocused] = useState(false);\n  const { searchQuery, setSearchQuery } = useContext(CountriesContext);\n  return (\n    <div className={styles.container}>\n      <input\n        type=\"search\"\n        value={searchQuery}\n        onFocus={() => setIsFocused(true)}\n        onBlur={() => {\n          setIsFocused(false);\n        }}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n      {!isFocused && (\n        <span>\n          <FontAwesomeIcon icon={faSearch} />\n          Search for a country...\n        </span>\n      )}\n    </div>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { faChevronUp, faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\n\nimport { CountriesContext } from \"../../../../contexts/CountriesContext\";\n\nimport styles from \"./Select.module.css\";\n\nconst REGIONS_ARRAY = [\"Africa\", \"Americas\", \"Asia\", \"Europe\", \"Oceania\"];\n\nexport default function Select() {\n  const [isOpen, setIsOpen] = useState(false);\n  const { region, setRegion } = useContext(CountriesContext);\n  const options = REGIONS_ARRAY;\n  return (\n    <div className={styles.container}>\n      <div className={styles.trigger} onClick={() => setIsOpen(!isOpen)}>\n        {region ? region : \"Filter By Region\"}\n        <FontAwesomeIcon icon={isOpen ? faChevronDown : faChevronUp} />\n      </div>\n      <div\n        className={classNames(styles.optionsMenu, { [styles.visible]: isOpen })}\n      >\n        {options.length === 0 && <div>No options</div>}\n        {options.map((regionOption) => (\n          <button\n            key={regionOption}\n            value={regionOption}\n            onClick={() => {\n              setRegion(regionOption);\n              setIsOpen(false);\n            }}\n          >\n            {regionOption}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport CountriesList from \"./components/CountriesList/CountriesList\";\nimport SearchInput from \"./components/SearchInput/SearchInput\";\nimport Select from \"./components/Select/Select\";\n\nimport styles from \"./Home.module.css\";\n\nfunction SubHeader() {\n  return (\n    <div className={styles.subHeader}>\n      <SearchInput />\n      <Select />\n    </div>\n  );\n}\n\nexport function Home() {\n  return (\n    <main>\n      <SubHeader />\n      <CountriesList />\n    </main>\n  );\n}\n","import { Home } from \"./Home\";\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport InfoList from \"../../shared/components/InfoList/InfoList\";\nimport styles from \"./Details.module.css\";\n\nconst CODE_URL = \"https://restcountries.com/v2/alpha\";\n\nconst Details = () => {\n  const navigate = useNavigate();\n  const params = useParams();\n  const [country, setCountry] = useState(null);\n  const [borders, setBorders] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const ac = new AbortController();\n    // TODO: handle null country situations.\n    const fetchBordersCountries = async (bordersCountries) => {\n      if (!bordersCountries) {\n        setBorders([]);\n      } else {\n        try {\n          const response = await fetch(\n            `${CODE_URL}?codes=${bordersCountries.join(\",\")}&fields=name,cioc`,\n            { signal: ac.signal }\n          );\n          if (response.ok) {\n            const data = await response.json();\n            setBorders(data);\n          }\n        } catch (e) {\n          setError(e);\n        }\n      }\n    };\n\n    const fetchCountryData = async () => {\n      try {\n        const response = await fetch(`${CODE_URL}/${params.countryName}`, {\n          signal: ac.signal,\n        });\n        if (response.ok) {\n          const data = await response.json();\n          setCountry(data);\n          fetchBordersCountries(data?.borders);\n        }\n      } catch (e) {\n        setError(e);\n      }\n    };\n\n    fetchCountryData();\n    return () => ac.abort();\n  }, []);\n\n  if (error) return null;\n  if (!country) return null;\n\n  const {\n    name,\n    nativeName,\n    flag,\n    population,\n    region,\n    subregion,\n    capital,\n    topLevelDomain,\n    currencies,\n    languages,\n  } = country;\n\n  const info = {\n    firstList: [\n      { title: \"Native name\", value: nativeName },\n      { title: \"Population\", value: population },\n      { title: \"Region\", value: region },\n      { title: \"Sub Region\", value: subregion },\n      { title: \"Capital\", value: capital },\n    ],\n    secondList: [\n      { title: \"Top Level Domain\", value: topLevelDomain?.join(\",\") },\n      {\n        title: \"Currencies\",\n        value: currencies?.map(({ name }) => name).join(\",\"),\n      },\n      {\n        title: \"Languages\",\n        value: languages?.map(({ name }) => name).join(\",\"),\n      },\n      { title: \"Sub Region\", value: subregion },\n      { title: \"Capital\", value: capital },\n    ],\n  };\n  return (\n    <main>\n      <button className={styles.backButton} onClick={() => navigate(\"/\")}>\n        <FontAwesomeIcon icon={faArrowLeft} />\n        Back\n      </button>\n      <article>\n        <div>\n          <img src={flag} alt={`${name} country flag`} />\n        </div>\n        <div>\n          <h1>{name}</h1>\n          <section className={styles.statsContainer}>\n            <InfoList info={info.firstList} />\n            <InfoList info={info.secondList} />\n          </section>\n          {borders && borders.length > 1 && (\n            <section className={styles.bordersList}>\n              <h4>Border Countries: </h4>\n              <ul>\n                {borders.map(({ name, cioc }) => (\n                  <li key={cioc}>\n                    <button\n                      onClick={() => {\n                        // TODO: find out why navigate doesn't work properly.\n                        navigate(`/${cioc}`, { replace: true });\n                        window.location.reload();\n                      }}\n                    >\n                      {name}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </section>\n          )}\n        </div>\n      </article>\n    </main>\n  );\n};\n\nexport default Details;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport Header from \"./shared/components/Header\";\nimport Home from \"./routes/Home\";\nimport Details from \"./routes/Details/Details\";\n\nimport { CountriesContextProvider } from \"./contexts/CountriesContext\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n        <CountriesContextProvider>\n          <Routes>\n            <Route path=\"\">\n              <Route path=\"\" element={<Home />} />\n              <Route path=\":countryName\" element={<Details />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={\n                <main style={{ padding: \"1rem\" }}>\n                  <p>There's nothing here!</p>\n                </main>\n              }\n            />\n          </Routes>\n        </CountriesContextProvider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}